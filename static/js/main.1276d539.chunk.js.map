{"version":3,"sources":["style.module.css","redux/actionTypes.js","redux/actions.js","config/fire-config.js","components/AddTodo.js","components/Todo.js","constants.js","redux/selectors.js","components/TodoList.js","components/VisibilityFilters.js","github-logo.png","App.js","redux/reducers/visibilityFilter.js","redux/reducers/todos.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","ADD_TODO","TOGGLE_TODO","SET_FILTER","nextTodoId","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","err","test","message","console","error","stack","fire","connect","addTodo","title","body","deadline","type","payload","id","useState","newTodoBody","setNewTodoBody","newTodoTitle","setNewTodoTitle","selectedDeadline","setSelectedDeadline","userId","setUserId","notification","setNotification","addTodoBtnRef","useRef","useEffect","auth","onAuthStateChanged","user","uid","className","styles","addTodoContainer","addedTodoNoti","addTodoLabels","placeholder","addTodoTitleInput","onChange","e","target","value","cols","rows","addTodoTextarea","datePickerContainer","utils","DateFnsUtils","disableToolbar","variant","format","margin","label","date","mm","getMonth","dd","getDate","formattedDate","getFullYear","KeyboardButtonProps","ref","neutralAddTodoButton","onMouseEnter","current","positiveAddTodoButton","disabledAddTodoButton","onMouseLeave","onClick","docData","firestore","Timestamp","fromDate","Date","completed","collection","doc","add","then","setTimeout","toggleTodo","todo","setCompleted","log","update","catch","cx","seconds","toLocaleDateString","VISIBILITY_FILTERS","ALL","COMPLETED","INCOMPLETE","getTodosState","store","todos","getTodos","allIds","getTodoList","map","byIds","getTodoById","state","visibilityFilter","allTodos","filter","getTodosByVisibilityFilter","todoList","setTodoList","get","querySnapshot","forEach","exists","data","prev","length","activeFilter","setFilter","Object","keys","filterKey","currentFilter","App","loggedIn","setLoggedIn","setUser","Paper","menuContainer","square","to","menuItem","noSelect","circle","menuContainerRight","loggedInUserContainer","loggedInUserNameEmail","displayName","email","photoURL","src","alt","userPhoto","signOut","menuItemRight","menuItemRightGithub","signInWithPopup","GithubAuthProvider","response","href","githubLogo","githubLogoImg","path","initialState","action","combineReducers","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,cAAgB,6BAA6B,SAAW,wBAAwB,OAAS,sBAAsB,SAAW,wBAAwB,iBAAmB,gCAAgC,gBAAkB,+BAA+B,kBAAoB,iCAAiC,cAAgB,6BAA6B,qBAAuB,+DAA+D,sBAAwB,gEAAgE,sBAAwB,gEAAgE,MAAQ,qBAAqB,cAAgB,6BAA6B,oBAAsB,mCAAmC,mBAAqB,kCAAkC,oBAAsB,mCAAmC,cAAgB,6BAA6B,cAAgB,mDAAmD,sBAAwB,qCAAqC,sBAAwB,qCAAqC,UAAY,yBAAyB,cAAgB,+B,+GCDrnCC,EAAW,WACXC,EAAc,cACdC,EAAa,aCAtBC,EAAa,E,kDCQjB,IACIC,IAASC,cAVU,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,cACnBC,MAAO,6CAIT,MAAMC,GACC,iBAAiBC,KAAKD,EAAIE,UAC3BC,QAAQC,MAAM,gCAAiCJ,EAAIK,OAE3D,IACeC,EADFf,ICyGEgB,cACX,KACA,CAAEC,QFnHiB,SAACC,EAAOC,EAAMC,GAAd,MAA4B,CAAEC,KAAMzB,EAAU0B,QAAS,CAAEC,KAAMxB,EAAYmB,QAAOC,OAAMC,eEiHhGJ,EA9GC,WAAO,IAAD,EACoBQ,mBAAS,IAD7B,mBACXC,EADW,KACEC,EADF,OAEsBF,mBAAS,IAF/B,mBAEXG,EAFW,KAEGC,EAFH,OAG8BJ,mBAAS,cAHvC,mBAGXK,EAHW,KAGOC,EAHP,OAIUN,mBAAS,IAJnB,mBAIXO,EAJW,KAIHC,EAJG,OAKsBR,mBAAS,IAL/B,mBAKXS,EALW,KAKGC,EALH,KAOZC,EAAgBC,iBAAO,MAE7BC,qBAAU,WACNtB,EAAKuB,OACAC,oBAAmB,SAACC,GACbA,GACAR,EAAUQ,EAAKC,UAG5B,IAgDH,OACI,sBAAKC,UAAWC,IAAOC,iBAAvB,UACKX,EAAe,mBAAGS,UAAWC,IAAOE,cAArB,SAAqCZ,IAAoB,KACrE,wBAAOS,UAAWC,IAAOG,cAAzB,mBACI,uBAAOC,YAAa,oBACjB1B,KAAM,OACFqB,UAAWC,IAAOK,kBACtBC,SAAU,SAAAC,GAAC,OAAItB,EAAgBsB,EAAEC,OAAOC,QACxCA,MAAOzB,OAElB,wBAAOe,UAAWC,IAAOG,cAAzB,yBAEI,0BAAUC,YAAa,gCACbM,KAAM,GACNC,KAAM,EACNL,SAAU,SAAAC,GAAC,OAAIxB,EAAewB,EAAEC,OAAOC,QACvCA,MAAO3B,EACPiB,UAAWC,IAAOY,qBAEhC,qBAAKb,UAAWC,IAAOa,oBAAvB,SACI,cAAC,IAAD,CAAyBC,MAAOC,IAAhC,SACI,cAAC,IAAD,CACIC,gBAAc,EACdC,QAAQ,SACRC,OAAO,aACPC,OAAO,SACPvC,GAAG,qBACHwC,MAAM,qBACNX,MAAOvB,EACPoB,SApDK,SAACe,GACtB,IAAMC,EAAKD,EAAKE,WAAa,EACvBC,EAAKH,EAAKI,UAEVC,EAAgBL,EAAKM,cACf,KAAQL,EAAG,EAAI,GAAK,KAAOA,EAC3B,KAAQE,EAAG,EAAI,GAAK,KAAOA,EAEvCrC,EAAoBuC,IA6CJE,oBAAqB,CACjB,aAAc,qBAM9B,wBAAQC,IAAKrC,EACLO,UAAWC,IAAO8B,qBAClBC,aAnDW,WAEnBvC,EAAcwC,QAAQjC,UADvBf,GAAgBF,EACmBkB,IAAOiC,sBAEPjC,IAAOkC,uBAgDjCC,aA5CW,WACvB3C,EAAcwC,QAAQjC,UAAYC,IAAO8B,sBA4C7BM,QAvFM,WAClB,GAAGpD,GAAgBF,GAAeI,EAAkB,CAChD,IAAMmD,EAAU,CACZ9D,MAAOS,EACPR,KAAMM,EACNL,SAAUL,EAAKkE,UAAUC,UAAUC,SAAS,IAAIC,KAAKvD,IACrDwD,WAAW,GAEftE,EAAKkE,YACAK,WAAW,SACXC,IAAIxD,GACJuD,WAAW,aACXE,IAAIR,GAASS,MAAK,WACnB/D,EAAe,IACfE,EAAgB,IAChBM,EAAgB,cAChBwD,YAAW,WACPxD,EAAgB,MACjB,UAiEP,4B,yBC7CGlB,cACX,KACA,CAAE2E,WHjEoB,SAAApE,GAAE,MAAK,CAAEF,KAAMxB,EAAayB,QAAS,CAAEC,SG+DlDP,EA7DF,SAAC,GAAsB,IAApB4E,EAAmB,EAAnBA,KAAM7D,EAAa,EAAbA,OAAa,EACGP,mBAASoE,EAAKP,WADjB,mBACxBA,EADwB,KACbQ,EADa,KAG/BxD,qBAAU,WACNzB,QAAQkF,IAAIF,GACZC,EAAaD,EAAKP,aACnB,IAqBH,OACI,oBAAI3C,UAAU,YAAYqC,QApBL,WACrBhE,EAAKkE,YACAK,WAAW,SACXC,IAAIxD,GACJuD,WAAW,aACXC,IAAIK,EAAKrE,IACTwE,OAAO,CACJV,WAAW,IAEdI,MAAK,WACF7E,QAAQkF,IAAI,eACZD,GAAcR,MAEjBW,OAAM,SAASnF,GAEZD,QAAQC,MAAM,4BAA6BA,OAKnD,SACI,sBAAK6B,UAAW,wBAAhB,UACA,wBAAOA,UAAWuD,IACd,YACAL,GAAQP,GAAa,wBAFzB,mBAGA,sBAAM3C,UAAWuD,IACb,mBACAL,GAAQP,GAAa,wBAFzB,SAEmDO,EAAK1E,WAExD,wBAAOwB,UAAWuD,IACd,YACAL,GAAQP,GAAa,wBAFzB,yBAGI,sBACA3C,UAAWuD,IACP,kBACAL,GAAQP,GAAa,wBAHzB,SAICO,EAAKzE,UAGV,wBAAOuB,UAAWuD,IACd,YACAL,GAAQP,GAAa,wBAFzB,sBAGI,sBAAM3C,UAAWkD,GAAQP,EAAY,uBAAyB,GAA9D,SACK,IAAID,KAA6B,IAAxBQ,EAAKxE,SAAS8E,SAAgBC,mBAAmB,cAG/D,+CACA,oD,QC7DHC,EAAqB,CAC9BC,IAAK,MACLC,UAAW,YACXC,WAAY,cCDHC,EAAgB,SAAAC,GAAK,OAAKA,EAAMC,OAMhCC,EAAW,SAAAF,GAAK,OAJF,SAAAA,GAAK,OAAID,EAAcC,GAASD,EAAcC,GAAOG,OAAS,GAIxDC,CAAYJ,GAAOK,KAAI,SAAAvF,GAAE,OAF/B,SAACkF,EAAOlF,GAAR,OAAeiF,EAAcC,GAAd,2BAA4BD,EAAcC,GAAOM,MAAMxF,IAAvD,IAA4DA,OAAO,GAE/CyF,CAAYP,EAAOlF,OCsDlEP,eANS,SAAAiG,GAGpB,MAAO,CAAEP,MDjD6B,SAACD,EAAOS,GAC9C,IAAMC,EAAWR,EAASF,GAC1B,OAAQS,GACJ,KAAKd,EAAmBE,UACpB,OAAOa,EAASC,QAAO,SAAAxB,GAAI,OAAIA,EAAKP,aACxC,KAAKe,EAAmBG,WACpB,OAAOY,EAASC,QAAO,SAAAxB,GAAI,OAAKA,EAAKP,aACzC,KAAKe,EAAmBC,IACxB,QACI,OAAOc,GCuCDE,CAA2BJ,EADZA,EAArBC,qBAKGlG,EAxDE,WAAO,IAAD,EACSQ,mBAAS,IADlB,mBACZO,EADY,KACJC,EADI,OAEaR,mBAAS,IAFtB,mBAEZ8F,EAFY,KAEFC,EAFE,KAuCnB,OAnCAlF,qBAAU,WACNtB,EAAKuB,OACAC,oBAAmB,SAACC,GACbA,GACAR,EAAUQ,EAAKC,QAGxBV,GACKhB,EAAKkE,YACAK,WAAW,SACXC,IAAIxD,GACJuD,WAAW,aACXkC,MACA/B,MAAK,SAASgC,GACPA,EAAcC,SAAQ,SAAAnC,GAClB,GAAIA,EAAIoC,OAAQ,CACZ,IAAM/B,EAAO,CACTrE,GAAIgE,EAAIhE,GACRL,MAAOqE,EAAIqC,OAAO1G,MAClBC,KAAMoE,EAAIqC,OAAOzG,KACjBC,SAAUmE,EAAIqC,OAAOxG,SACrBiE,UAAWE,EAAIqC,OAAOvC,WAE1BkC,GAAY,SAAAM,GAAI,4BAAQA,GAAR,CAAcjC,YAE9BhF,QAAQkF,IAAI,2BAI3BE,OAAM,SAASnF,GACZD,QAAQkF,IAAI,0BAA2BjF,QAGxD,CAACkB,IAGA,oBAAIW,UAAU,YAAd,SACK4E,GAAYA,EAASQ,OAChBR,EAASR,KAAI,SAAClB,GACZ,OAAO,cAAC,EAAD,CAA8BA,KAAMA,EAAM7D,OAAQA,GAAlD,eAAmB6D,EAAKrE,QAEjC,sBChBHP,G,MAAAA,aAJS,SAAAiG,GACpB,MAAO,CAAEc,aAAcd,EAAMC,oBAK7B,CAAEc,UP/BmB,SAAAZ,GAAM,MAAK,CAAE/F,KAAMvB,EAAYwB,QAAS,CAAE8F,aO6BpDpG,EA5BW,SAAC,GAAiC,IAA/B+G,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACvC,OACI,qBAAKtF,UAAU,qBAAf,SACKuF,OAAOC,KAAK9B,GAAoBU,KAAI,SAAAqB,GACjC,IAAMC,EAAgBhC,EAAmB+B,GACzC,OACI,sBAEIzF,UAAWuD,IACP,SACAmC,IAAkBL,GAAgB,kBAEtChD,QAAS,WACLiD,EAAUI,IAPlB,SAUPA,GAVO,4BAC8BA,a,yBCdnC,MAA0B,wCCe1B,SAASC,IAAO,IAAD,EACM7G,oBAAS,GADf,mBACnB8G,EADmB,KACTC,EADS,OAEF/G,mBAAS,IAFP,mBAEnBgB,EAFmB,KAEbgG,EAFa,KAI1BzH,EAAKuB,OACAC,oBAAmB,SAACC,GACbA,GACA+F,GAAY,GACZC,EAAQhG,IAER+F,GAAY,MAuB1B,OACI,eAAC,IAAD,WACI,eAACE,EAAA,EAAD,CAAO/F,UAAWC,IAAO+F,cAAeC,QAAM,EAA9C,UACI,eAAC,IAAD,CAAMC,GAAG,IAAIlG,UAAWC,IAAOkG,SAA/B,UACI,sBAAMnG,UAAWC,IAAOmG,SAAxB,mBACA,qBAAKpG,UAAWC,IAAOoG,YAE3B,eAAC,IAAD,CAAMH,GAAG,YAAYlG,UAAWC,IAAOkG,SAAvC,UACI,sBAAMnG,UAAWC,IAAOmG,SAAxB,0BACA,qBAAKpG,UAAWC,IAAOoG,YAEzBT,EAOE,sBAAK5F,UAAWC,IAAOqG,mBAAvB,UACI,sBAAKtG,UAAWC,IAAOsG,sBAAvB,UACI,mBAAGvG,UAAWC,IAAOuG,sBAArB,SAA6C1G,EAAOA,EAAK2G,YAAc3G,EAAK2G,YAAc3G,EAAK4G,MAAQ,KACtG5G,EAAK6G,SAAW,qBAAKC,IAAK9G,EAAK6G,SAAUE,IAAK,gBAAiB7G,UAAWC,IAAO6G,YAAgB,QAEtG,mBAAGzE,QA1CA,WACjBhE,EAAKuB,OACAmH,UACAhE,MAAK,WACF7E,QAAQkF,IAAI,uBAsCoBpD,UAAWC,IAAO+G,cAA5C,wBAXJ,qBAAKhH,UAAWC,IAAOqG,mBAAvB,SACI,mBAAGtG,UAAWC,IAAOgH,oBAAqB5E,QAxB5D,WACIhE,EACKuB,OACAsH,gBAAgB,IAAI7I,EAAKuB,KAAKuH,oBAC9BpE,MAAK,SAACqE,GACHtB,EAAQsB,EAAStH,MACjB+F,GAAY,GACZ3H,QAAQkF,IAAItD,OAiBgEuH,KAAM,QAA5E,SACI,qBAAKT,IAAKU,EAAYT,IAAK,cAAe7G,UAAWC,IAAOsH,uBAcxE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,YAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,e,YChFpBC,EAAe/D,EAAmBC,IAazBa,EAXU,WAAmC,IAAlCD,EAAiC,uDAAzBkD,EAAcC,EAAW,uCACvD,OAAQA,EAAO/I,MACX,KAAKvB,EACD,OAAOsK,EAAO9I,QAAQ8F,OAE1B,QACI,OAAOH,I,QCTbkD,EAAe,CACjBvD,OAAQ,GACRG,MAAO,ICAIsD,cAAgB,CAAE3D,MDGlB,WAAwC,IAA/BO,EAA8B,uDAAtBkD,EAAcC,EAAQ,uCAClD,OAAQA,EAAO/I,MACX,KAAKzB,EAAW,IAAD,EAC2BwK,EAAO9I,QAArCC,EADG,EACHA,GAAIL,EADD,EACCA,MAAOC,EADR,EACQA,KAAMC,EADd,EACcA,SACzB,OAAO,2BACA6F,GADP,IAEIL,OAAO,GAAD,mBAAMK,EAAML,QAAZ,CAAoBrF,IAC1BwF,MAAM,2BACCE,EAAMF,OADR,kBAEAxF,EAAK,CACFL,QACAC,OACAC,WACAiE,WAAW,OAK3B,KAAKxF,EAAc,IACP0B,EAAO6I,EAAO9I,QAAdC,GACR,OAAO,2BACA0F,GADP,IAEIF,MAAM,2BACCE,EAAMF,OADR,kBAEAxF,EAFA,2BAGM0F,EAAMF,MAAMxF,IAHlB,IAIG8D,WAAY4B,EAAMF,MAAMxF,GAAI8D,gBAK5C,QACI,OAAO4B,ICnCqBC,qBCDzBoD,cAAYC,GCG3BC,IAASC,OACL,cAAC,IAAD,CAAUhE,MAAOA,EAAjB,SACA,cAAC4B,EAAD,MAEFqC,SAASC,eAAe,W","file":"static/js/main.1276d539.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuContainer\":\"style_menuContainer__22IKf\",\"menuItem\":\"style_menuItem__3bLVH\",\"circle\":\"style_circle__2LxtK\",\"noSelect\":\"style_noSelect__2R0QZ\",\"addTodoContainer\":\"style_addTodoContainer__1XnvO\",\"addTodoTextarea\":\"style_addTodoTextarea__18POU\",\"addTodoTitleInput\":\"style_addTodoTitleInput__3TH2N\",\"addTodoButton\":\"style_addTodoButton__qf7sK\",\"neutralAddTodoButton\":\"style_neutralAddTodoButton__3iMSl style_addTodoButton__qf7sK\",\"positiveAddTodoButton\":\"style_positiveAddTodoButton__35AxM style_addTodoButton__qf7sK\",\"disabledAddTodoButton\":\"style_disabledAddTodoButton__3uYR9 style_addTodoButton__qf7sK\",\"shake\":\"style_shake__1EXtY\",\"addTodoLabels\":\"style_addTodoLabels__2dBRe\",\"datePickerContainer\":\"style_datePickerContainer__25UbV\",\"menuContainerRight\":\"style_menuContainerRight__3KDO1\",\"menuItemRightGithub\":\"style_menuItemRightGithub__1d_nX\",\"githubLogoImg\":\"style_githubLogoImg__xeqAU\",\"menuItemRight\":\"style_menuItemRight__3iEMZ style_menuItem__3bLVH\",\"loggedInUserContainer\":\"style_loggedInUserContainer__3jHjE\",\"loggedInUserNameEmail\":\"style_loggedInUserNameEmail__2ysIa\",\"userPhoto\":\"style_userPhoto__3QP3z\",\"addedTodoNoti\":\"style_addedTodoNoti__oLUak\"};","export const ADD_TODO = \"ADD_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const SET_FILTER = \"SET_FILTER\";","import { ADD_TODO, TOGGLE_TODO, SET_FILTER } from './actionTypes'\n\nlet nextTodoId = 0;\n\nexport const toggleTodo = id => ({ type: TOGGLE_TODO, payload: { id } });\n\nexport const setFilter = filter => ({ type: SET_FILTER, payload: { filter } });\n\nexport const addTodo = (title, body, deadline) => ({ type: ADD_TODO, payload: { id: ++nextTodoId, title, body, deadline } });","import firebase from 'firebase';\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA5XT8kXxvt2oq6l59tvefY5kpnqgCKUrE\",\n    authDomain: \"todo-app-f9dba.firebaseapp.com\",\n    databaseURL: \"https://todo-app-f9dba.firebaseio.com\",\n    projectId: \"todo-app-f9dba\",\n    storageBucket: \"todo-app-f9dba.appspot.com\",\n    messagingSenderId: \"60057717887\",\n    appId: \"1:60057717887:web:83f33b2ff0c49e4d57834a\"\n};\ntry {\n    firebase.initializeApp(firebaseConfig);\n} catch(err){\n    if (!/already exists/.test(err.message)) {\n        console.error('Firebase initialization error', err.stack)}\n}\nconst fire = firebase;\nexport default fire;","import React, {useEffect, useRef, useState} from 'react';\nimport { connect } from 'react-redux'\nimport { addTodo } from '../redux/actions'\nimport styles from '../style.module.css'\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport fire from \"../config/fire-config\";\n\nconst AddTodo = () => {\n    const [newTodoBody, setNewTodoBody] = useState('');\n    const [newTodoTitle, setNewTodoTitle] = useState('');\n    const [selectedDeadline, setSelectedDeadline] = useState('2020-11-18');\n    const [userId, setUserId] = useState('');\n    const [notification, setNotification] = useState('');\n\n    const addTodoBtnRef = useRef(null);\n\n    useEffect(() => {\n        fire.auth()\n            .onAuthStateChanged((user) => {\n                if (user) {\n                    setUserId(user.uid);\n                }\n            });\n    }, []);\n\n    const handleAddTodo = () => {\n        if(newTodoTitle && newTodoBody && selectedDeadline) {\n            const docData = {\n                title: newTodoTitle,\n                body: newTodoBody,\n                deadline: fire.firestore.Timestamp.fromDate(new Date(selectedDeadline)),\n                completed: false\n            }\n            fire.firestore()\n                .collection('todos')\n                .doc(userId)\n                .collection('userTodos')\n                .add(docData).then(() => {\n                setNewTodoBody('');\n                setNewTodoTitle('');\n                setNotification('TODO ADDED');\n                setTimeout(() => {\n                    setNotification('')\n                }, 1000);\n            })\n        }\n    }\n\n    const handleDateChange = (date) => {\n        const mm = date.getMonth() + 1; // getMonth() is zero-based\n        const dd = date.getDate();\n\n        const formattedDate = date.getFullYear() +\n                    '-' + ((mm>9 ? '' : '0') + mm) +\n                    '-' + ((dd>9 ? '' : '0') + dd);\n\n        setSelectedDeadline(formattedDate);\n    };\n\n    const handleOnMouseEnter = () => {\n        if(newTodoTitle && newTodoBody) {\n            addTodoBtnRef.current.className = styles.positiveAddTodoButton;\n        } else {\n            addTodoBtnRef.current.className = styles.disabledAddTodoButton;\n        }\n    }\n\n    const handleOnMouseLeave = () => {\n        addTodoBtnRef.current.className = styles.neutralAddTodoButton;\n    }\n\n    return(\n        <div className={styles.addTodoContainer}>\n            {notification ? <p className={styles.addedTodoNoti}>{notification}</p> : null}\n                <label className={styles.addTodoLabels}>Title:\n                    <input placeholder={'title of the Todo'}\n                       type={'text'}\n                           className={styles.addTodoTitleInput}\n                       onChange={e => setNewTodoTitle(e.target.value)}\n                       value={newTodoTitle} />\n                </label>\n            <label className={styles.addTodoLabels}>\n                Description:\n                <textarea placeholder={'short description of the Todo'}\n                          cols={40}\n                          rows={5}\n                          onChange={e => setNewTodoBody(e.target.value)}\n                          value={newTodoBody}\n                          className={styles.addTodoTextarea}/>\n            </label>\n            <div className={styles.datePickerContainer}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils} >\n                    <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"MM/dd/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-inline\"\n                        label=\"Date picker inline\"\n                        value={selectedDeadline}\n                        onChange={handleDateChange}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                </MuiPickersUtilsProvider>\n            </div>\n\n            <button ref={addTodoBtnRef}\n                    className={styles.neutralAddTodoButton}\n                    onMouseEnter={handleOnMouseEnter}\n                    onMouseLeave={handleOnMouseLeave}\n                    onClick={handleAddTodo}>Add Todo</button>\n        </div>\n    );\n}\n\nexport default connect(\n    null,\n    { addTodo }\n)(AddTodo)","import React, {useEffect, useState} from \"react\";\nimport { connect } from \"react-redux\";\nimport cx from \"classnames\";\nimport { toggleTodo } from \"../redux/actions\";\nimport fire from \"../config/fire-config\";\n\nconst Todo = ({ todo, userId }) => {\n    const [completed, setCompleted] = useState(todo.completed);\n\n    useEffect(() => {\n        console.log(todo);\n        setCompleted(todo.completed);\n    }, []);\n\n    const handleToggleTodo = () => {\n        fire.firestore()\n            .collection(\"todos\")\n            .doc(userId)\n            .collection('userTodos')\n            .doc(todo.id)\n            .update({\n                completed: true\n            })\n            .then(() => {\n                console.log(\"doc updated\");\n                setCompleted(!completed);\n            })\n            .catch(function(error) {\n                // The document probably doesn't exist.\n                console.error(\"Error updating document: \", error);\n            });\n    }\n\n    return (\n        <li className=\"todo-item\" onClick={handleToggleTodo}>\n            <div className={\"todoInternalContainer\"}>\n            <label className={cx(\n                \"todoLabel\",\n                todo && completed && \"todo-item--completed\")}>Title:\n            <span className={cx(\n                \"todo-item__title\",\n                todo && completed && \"todo-item--completed\")}>{todo.title}</span>\n            </label>\n            <label className={cx(\n                \"todoLabel\",\n                todo && completed && \"todo-item--completed\")}>Description:\n                <span\n                className={cx(\n                    \"todo-item__text\",\n                    todo && completed && \"todo-item--completed\")}>\n                {todo.body}\n            </span>\n            </label>\n            <label className={cx(\n                \"todoLabel\",\n                todo && completed && \"todo-item--completed\")}>Deadline:\n                <span className={todo && completed ? \"todo-item--completed\" : \"\"}>\n                    {new Date(todo.deadline.seconds * 1000).toLocaleDateString(\"en-US\")}\n                </span>\n            </label>\n                <p>Checkmark icon</p>\n                <p>Delete icon</p>\n            </div>\n        </li>\n    );\n}\n\nexport default connect(\n    null,\n    { toggleTodo }\n)(Todo);","export const VISIBILITY_FILTERS = {\n    ALL: \"all\",\n    COMPLETED: \"completed\",\n    INCOMPLETE: \"incomplete\"\n};","import {VISIBILITY_FILTERS} from '../constants';\n\nexport const getTodosState = store =>  store.todos;\n\nexport const getTodoList = store => getTodosState(store) ? getTodosState(store).allIds : [];\n\nexport const getTodoById = (store, id) => getTodosState(store) ? { ...getTodosState(store).byIds[id], id } : {};\n\nexport const getTodos = store => getTodoList(store).map(id => getTodoById(store, id));\n\nexport const getTodosByVisibilityFilter = (store, visibilityFilter) => {\n    const allTodos = getTodos(store);\n    switch (visibilityFilter) {\n        case VISIBILITY_FILTERS.COMPLETED:\n            return allTodos.filter(todo => todo.completed);\n        case VISIBILITY_FILTERS.INCOMPLETE:\n            return allTodos.filter(todo => !todo.completed);\n        case VISIBILITY_FILTERS.ALL:\n        default:\n            return allTodos;\n    }\n};","import React, {useEffect, useState} from \"react\";\nimport { connect } from \"react-redux\";\nimport Todo from \"./Todo\";\nimport { getTodosByVisibilityFilter } from \"../redux/selectors\";\nimport fire from \"../config/fire-config\";\n\nconst TodoList = () => {\n    const [userId, setUserId] = useState('');\n    const [todoList, setTodoList] = useState([]);\n\n    useEffect(() => {\n        fire.auth()\n            .onAuthStateChanged((user) => {\n                if (user) {\n                    setUserId(user.uid);\n                }\n            });\n        if(userId) {\n                fire.firestore()\n                    .collection(\"todos\")\n                    .doc(userId)\n                    .collection('userTodos')\n                    .get()\n                    .then(function(querySnapshot) {\n                            querySnapshot.forEach(doc => {\n                                if (doc.exists) {\n                                    const todo = {\n                                        id: doc.id,\n                                        title: doc.data().title,\n                                        body: doc.data().body,\n                                        deadline: doc.data().deadline,\n                                        completed: doc.data().completed,\n                                    };\n                                    setTodoList(prev => [...prev, todo]);\n                                } else {\n                                    console.log(\"No such document!\");\n                                }\n                            }\n                        )})\n                    .catch(function(error) {\n                        console.log(\"Error getting document:\", error);\n                    });\n        }\n    }, [userId]);\n\n    return(\n        <ul className=\"todo-list\">\n            {todoList && todoList.length\n                ? todoList.map((todo) => {\n                    return <Todo key={`todo-${todo.id}`} todo={todo} userId={userId}/>;\n                })\n                : \"No todos, yay!\"}\n        </ul>\n    );\n};\n\nconst mapStateToProps = state => {\n    const { visibilityFilter } = state;\n    const todos = getTodosByVisibilityFilter(state, visibilityFilter);\n    return { todos };\n};\n\nexport default connect(mapStateToProps)(TodoList);","import React from \"react\";\nimport cx from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { setFilter } from \"../redux/actions\";\nimport { VISIBILITY_FILTERS } from \"../constants\";\nimport '../style.css';\n\nconst VisibilityFilters = ({ activeFilter, setFilter }) => {\n    return (\n        <div className=\"visibility-filters\">\n            {Object.keys(VISIBILITY_FILTERS).map(filterKey => {\n                const currentFilter = VISIBILITY_FILTERS[filterKey];\n                return (\n                    <span\n                        key={`visibility-filter-${currentFilter}`}\n                        className={cx(\n                            \"filter\",\n                            currentFilter === activeFilter && \"filter--active\"\n                        )}\n                        onClick={() => {\n                            setFilter(currentFilter);\n                        }}\n                    >\n            {currentFilter}\n          </span>\n                );\n            })}\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return { activeFilter: state.visibilityFilter };\n};\n\nexport default connect(\n    mapStateToProps,\n    { setFilter }\n)(VisibilityFilters);\n","export default __webpack_public_path__ + \"static/media/github-logo.c12e6ca9.png\";","import AddTodo from \"./components/AddTodo\";\nimport TodoList from \"./components/TodoList\";\nimport VisibilityFilters from \"./components/VisibilityFilters\";\nimport React, {useState} from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport styles from \"./style.module.css\";\nimport Paper from \"@material-ui/core/Paper\";\nimport fire from \"./config/fire-config\";\nimport githubLogo from './github-logo.png';\n\nexport default function App() {\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [user, setUser] = useState({})\n\n    fire.auth()\n        .onAuthStateChanged((user) => {\n            if (user) {\n                setLoggedIn(true)\n                setUser(user);\n            } else {\n                setLoggedIn(false)\n            }\n        })\n\n    const handleLogout = () => {\n        fire.auth()\n            .signOut()\n            .then(() => {\n                console.log(\"user logged out\")\n            });\n    }\n\n    function handleGithubLogin() {\n        fire\n            .auth()\n            .signInWithPopup(new fire.auth.GithubAuthProvider())\n            .then((response) => {\n                setUser(response.user);\n                setLoggedIn(true);\n                console.log(user);\n            });\n    }\n\n  return (\n      <Router>\n          <Paper className={styles.menuContainer} square>\n              <Link to=\"/\" className={styles.menuItem}>\n                  <span className={styles.noSelect}>Todos</span>\n                  <div className={styles.circle}/>\n              </Link>\n              <Link to=\"/add_todo\" className={styles.menuItem}>\n                  <span className={styles.noSelect}>Add new Todo</span>\n                  <div className={styles.circle}/>\n              </Link>\n              {!loggedIn ?\n                  <div className={styles.menuContainerRight}>\n                      <a className={styles.menuItemRightGithub} onClick={handleGithubLogin} href={'#void'}>\n                          <img src={githubLogo} alt={'github logo'} className={styles.githubLogoImg} />\n                      </a>\n                  </div>\n                  :\n                  <div className={styles.menuContainerRight}>\n                      <div className={styles.loggedInUserContainer}>\n                          <p className={styles.loggedInUserNameEmail}>{user ? user.displayName ? user.displayName : user.email : ''}</p>\n                          {user.photoURL ? <img src={user.photoURL} alt={'photo of user'} className={styles.userPhoto} /> : null }\n                      </div>\n                      <a onClick={handleLogout} className={styles.menuItemRight}>Log out</a>\n                  </div>\n              }\n          </Paper>\n\n              <Switch>\n                  <Route path=\"/add_todo\">\n                      <AddTodo />\n                  </Route>\n                  <Route path=\"/\">\n                      <div>\n                          <TodoList />\n                          <VisibilityFilters />\n                      </div>\n                  </Route>\n              </Switch>\n      </Router>\n  );\n}","import { SET_FILTER } from \"../actionTypes\";\nimport { VISIBILITY_FILTERS } from \"../../constants\";\n\nconst initialState = VISIBILITY_FILTERS.ALL;\n\nconst visibilityFilter = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_FILTER: {\n            return action.payload.filter;\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default visibilityFilter;","import { ADD_TODO, TOGGLE_TODO } from \"../actionTypes\";\n\nconst initialState = {\n    allIds: [],\n    byIds: {}\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case ADD_TODO: {\n            const { id, title, body, deadline } = action.payload;\n            return {\n                ...state,\n                allIds: [...state.allIds, id],\n                byIds: {\n                    ...state.byIds,\n                    [id]: {\n                        title,\n                        body,\n                        deadline,\n                        completed: false\n                    }\n                }\n            };\n        }\n        case TOGGLE_TODO: {\n            const { id } = action.payload;\n            return {\n                ...state,\n                byIds: {\n                    ...state.byIds,\n                    [id]: {\n                        ...state.byIds[id],\n                        completed: !state.byIds[id].completed\n                    }\n                }\n            };\n        }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport visibilityFilter from \"./visibilityFilter\";\nimport todos from \"./todos\";\n\nexport default combineReducers({ todos, visibilityFilter });","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}